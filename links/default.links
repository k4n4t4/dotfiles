#!/bin/sh

PATH="$HOME/bin:$PATH"
PATH="$HOME/.local/bin:$PATH"
PATH="$HOME/.cargo/bin:$PATH"
PATH="$HOME/go/bin:$PATH"
PATH="/snap/bin:$PATH"
PATH="/usr/sandbox:$PATH"
PATH="/usr/local/bin:$PATH"
PATH="/usr/local/sbin:$PATH"
PATH="/usr/share/games:$PATH"
PATH="/usr/sbin:$PATH"
PATH="/sbin:$PATH"
PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"
PATH="/home/linuxbrew/.linuxbrew/sbin:$PATH"

dot "bin" -r
dot "../dm" "bin/dm"

dot ".fonts.conf"
dot ".profile"

if cmd_exist bash; then
  dot ".bashrc"
  dot ".bash_aliases"
fi

if cmd_exist zsh; then
  dot ".zshrc"
fi

if cmd_exist fish; then
  dot ".config/fish" -r
fi

if cmd_exist codium; then
  dot ".config/VSCodium/User/keybindings.json"
  dot ".config/VSCodium/User/settings.json"
  dot ".config/VSCodium/User/snippets"
fi

if cmd_exist vim; then
  dot ".vimrc"
fi

if cmd_exist nvim; then
  dot ".config/nvim" -r -d 1
fi

if cmd_exist tmux; then
  dot ".config/tmux/.tmux.conf" ".tmux.conf"
  dot ".config/tmux" -r
fi

if cmd_exist zellij; then
  dot ".config/zellij" -r
fi

if cmd_exist alacritty; then
  dot ".config/alacritty/alacritty.yml"
  dot ".config/alacritty/alacritty.toml"
fi

if cmd_exist wezterm; then
  dot ".wezterm.lua"
fi

if cmd_exist starship; then
  dot ".config/starship/starship.toml" ".config/starship.toml"
fi

if cmd_exist bspwm; then
  dot ".config/bspwm" -r
fi

if cmd_exist picom; then
  dot ".config/picom" -r
fi

if cmd_exist sxhkd; then
  dot ".config/sxhkd" -r
fi

if cmd_exist polybar; then
  dot ".config/polybar" -r
fi

if cmd_exist eww; then
  dot ".config/eww" -r
fi

if cmd_exist rofi; then
  dot ".config/rofi" -r
fi

if cmd_exist conky; then
  dot ".config/conky" -r
fi

if cmd_exist dunst; then
  dot ".config/dunst" -r
fi

if cmd_exist Hyprland; then
  dot ".config/hypr" -r
fi

if cmd_exist wofi; then
  dot ".config/wofi" -r
fi

if cmd_exist ags; then
  dot ".config/ags" -r
fi

if cmd_exist fastfetch; then
  dot ".config/fastfetch" -r
fi

if cmd_exist luakit; then
  dot ".config/luakit" -r
fi

if cmd_exist kitty; then
  dot ".config/kitty" -r
fi

if cmd_exist sheldon; then
  dot ".config/sheldon" -r
fi

if cmd_exist firefox; then
  for folder in ~/.mozilla/firefox/*.default-release; do
    dot "firefox/user.js" "$folder/user.js"
    dot "firefox/userChrome.css" "$folder/chrome/userChrome.css"
  done
fi


# shellcheck disable=SC2154
case "$dot_mode" in
  ( "install" )

    if cmd_exist greetd && cmd_exist Hyprland && cmd_exist ags; then
      if [ -d "/etc/greetd" ]; then

        info "greetd config"

        warn "  sudo required"
        ask "  Continue? [y/N]: "
        case "$RET" in
          ( [Yy] )
            sudo cp "$WORK_PATH"/files/greetd/* /etc/greetd/ -riv
            ;;
          ( * )
            log "  Skiped."
            ;;
        esac
      fi
    fi

    if cmd_exist git; then
      info "git config"
      ask "  Continue? [Y/n]: "
      case "$RET" in
        ( [nN] ) : ;;
        ( * )

          info "  git config user"

          ask "  Continue? [Y/n]: "
          case "$RET" in
            ( [nN] ) : ;;
            ( * )
              ask "    email: "
              if [ "$RET" != "" ]; then
                git config --global user.email "$RET"
              fi
              ask "    name: "
              if [ "$RET" != "" ]; then
                git config --global user.name "$RET"
              fi
              ;;
          esac

          if cmd_exist delta; then
            info "  git config delta"
            ask "  Continue? [Y/n]: "
            case "$RET" in
              ( [nN] ) : ;;
              ( * )
                git config --global core.pager "delta --line-numbers"
                git config --global interactive.diffFilter "delta --color-only"
                git config --global delta.navigate true
                git config --global delta.light false
                ;;
            esac
          fi
          ;;
      esac
    fi

    ;;
  ( "uninstall" ) : ;;
  ( "check" ) : ;;
  ( * )
    error "Invalid Mode: $dot_mode"
    return 1
    ;;
esac
