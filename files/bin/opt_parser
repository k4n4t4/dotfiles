#!/bin/sh

CR="$(printf "\r")"

deque_set() {
  eval "$1"'="${2:-$CR}"'
  deque_get "$1"
}

deque_get() {
  deque_front "$1"
  deque_back "$1"
}

deque_front() {
  eval "$1"'_front="${'"$1"'#${CR}}";'"$1"'_front="${'"$1"'_front%%${CR}*}"'
}

deque_back() {
  eval "$1"'_back="${'"$1"'%${CR}}";'"$1"'_back="${'"$1"'_back##*${CR}}"'
}

deque_empty() {
  if eval '[ "${'"$1"':-$CR}" = "$CR" ]'; then
    return 0
  else
    return 1
  fi
}

deque_push() {
  eval "$1"'="${'"$1"':-$CR}$2$CR"'
  deque_get "$1"
}

deque_push_front() {
  eval "$1"'="$CR$2${'"$1"':-$CR}"'
  deque_get "$1"
}

deque_pop() {
  if [ $# -eq 2 ]; then
    eval "$2"'="$'"$1"'_back"'
  fi
  if deque_empty "$1"; then
    return 2
  fi
  eval "$1"'="${'"$1"'%${CR}*${CR}}$CR"'
  deque_get "$1"
}

deque_pop_front() {
  if [ $# -eq 2 ]; then
    eval "$2"'="$'"$1"'_front"'
  fi
  if deque_empty "$1"; then
    return 2
  fi
  eval "$1"'="$CR${'"$1"'#${CR}*${CR}}"'
  deque_get "$1"
}

deque_raw() {
  eval 'printf "%s" "$'"$1"'"'
}

deque_has() {
  case "$(deque_raw "$1")" in ( *"$CR$2$CR"* )
    return 0
  esac
  return 1
}



opt_parser() {
  deque_set _option_has_arg
  while [ $# -gt 0 ]; do
    case "$1" in
      ( "--" )
        shift
        break
        ;;
      ( ?*":"?* )
        deque_push _option_has_arg "$1"
        shift
        ;;
      ( * )
        _variable_name="$1"
        shift
        ;;
    esac
  done
  deque_set _normal_args
  deque_set _option_args
  _scan_option=true
  while [ $# -gt 0 ]; do
    if $_scan_option; then
      case "$1" in ( "-"?* )
        case "$1" in
          ( "--" )
            _scan_option=false
            shift
            ;;
          ( "--"* | "-"? )
            case "$1" in ( "--"?*"="* )
              _opt_name="${1%%"="*}"
              _opt_val="${1#*"="}"
              shift
              set -- "$_opt_name" "$_opt_val" "$@"
              continue
            esac
            _arg_count=0
            case "$_option_has_arg" in ( *"${CR}${1}:"* )
              _arg_count="${_option_has_arg##*"$CR$1:"}"
              _arg_count="${_arg_count%%"$CR"*}"
            esac

            if [ $# -gt $_arg_count ]; then
              deque_push _option_args "$1"
              shift
              while [ $_arg_count -gt 0 ]; do
                deque_push _option_args "$1"
                shift
                _arg_count=$(($_arg_count - 1))
              done
            else
              : error point
              shift
            fi
            ;;
          ( * )
            deque_set _multi_short_opt "$CR$(printf "%s" "$1" | awk -v CR="$CR" -v FS="" '{for (i = 2; i <= NF; i++) printf "-%s" CR, $i;}')"
            while deque_pop_front _multi_short_opt i; do
              case "$1" in
                ( "--" ) : ;;
                ( * )
                  case "$_option_has_arg" in
                    ( *"${CR}${i}:"* )
                      : error point
                      ;;
                    ( * )
                      deque_push _option_args "$i"
                      ;;
                  esac
                  ;;
              esac
            done
            shift
            ;;
        esac
        continue
      esac
    fi
    deque_push _normal_args "$1"
    shift
  done
  deque_set _result "${_option_args}--${_normal_args}"
  if [ "${_variable_name:-}" != "" ]; then
    deque_set "$_variable_name" "$_result"
  fi
  while deque_pop_front _result i; do
    printf "%s\n" "$i"
  done
}

opt_parser "$@"
