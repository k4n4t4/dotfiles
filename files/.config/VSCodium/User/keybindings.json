[
    {
        "key": "alt+numpad_add",
        "command": "editor.action.fontZoomIn"
    },
    {
        "key": "alt+numpad_subtract",
        "command": "editor.action.fontZoomOut"
    },
    {
        "key": "ctrl+alt+down",
        "command": "editor.emmet.action.decrementNumberByOne"
    },
    {
        "key": "ctrl+alt+up",
        "command": "editor.emmet.action.incrementNumberByOne"
    },
    {
        "key": "ctrl+k i",
        "command": "insert-unicode.insertText"
    },
    {
        "key": "alt+a",
        "command": "workbench.action.toggleActivityBarVisibility"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-luna.layer.duplicateLayer",
        "when": "luna:focused && activeCustomEditorId == 'luna.editor' && focusedView == ''"
    },
    {
        "key": "ctrl+shift+d",
        "command": "luna.layer.duplicateLayer"
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+right",
        "command": "editor.action.moveCarretRightAction"
    },
    {
        "key": "alt+left",
        "command": "editor.action.moveCarretLeftAction"
    },
    {
        "key": "ctrl+shift+up",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "home",
        "command": "-cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "end",
        "command": "-cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "end",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "home",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+home",
        "command": "-cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+end",
        "command": "-cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "editor.action.transformToUppercase"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "editor.action.transformToLowercase"
    },
    {
        "key": "shift+alt+a",
        "command": "Toggle Breadcrumb Visible"
    },
    {
        "key": "ctrl+shift+alt+a",
        "command": "Toggle StatusBar Visible"
    },
    {
        "key": "ctrl+k l",
        "command": "Toggle LineNumbers"
    },
    {
        "key": "ctrl+shift+v",
        "command": "-clipboard.pasteFromClipboard",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k v",
        "command": "toggleVim",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "extension.vim_cmd+alt+up",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+alt+up",
        "command": "-extension.vim_cmd+alt+up",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "shift+alt+down",
        "command": "extension.vim_cmd+alt+down",
        "when": "editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "shift+alt+down",
        "command": "-extension.vim_cmd+alt+down",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "meta+a",
        "command": "extension.vim_cmd+a",
        "when": "editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl"
    },
    {
        "key": "meta+a",
        "command": "-extension.vim_cmd+a",
        "when": "editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+d",
        "command": "extension.vim_ctrl+d",
        "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl && vim.mode != 'Insert'"
    },
    {
        "key": "ctrl+d",
        "command": "-extension.vim_ctrl+d",
        "when": "editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "alt+x",
        "command": "editor.action.setSelectionAnchor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+b",
        "command": "-editor.action.setSelectionAnchor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+x",
        "command": "editor.action.goToSelectionAnchor"
    },
    {
        "key": "alt+z",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "shift+alt+z",
        "command": "relative-goto.goto"
    },
    {
        "key": "alt+g",
        "command": "-relative-goto.goto"
    },
    {
        "key": "shift+alt+x",
        "command": "editor.action.selectFromAnchorToCursor",
        "when": "editorTextFocus && selectionAnchorSet"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "-editor.action.selectFromAnchorToCursor",
        "when": "editorTextFocus && selectionAnchorSet"
    },
    {
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "alt+d",
        "command": "-todo.toggleDone",
        "when": "editorTextFocus && editorLangId == 'todo'"
    },
    {
        "key": "alt+j",
        "command": "editor.action.joinLines"
    },
    {
        "key": "alt+d",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+q",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "ctrl+shift+[BracketLeft]",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    {
        "key": "shift+alt+s",
        "command": "relative-goto.select"
    },
    {
        "key": "alt+s",
        "command": "-relative-goto.select"
    },
    {
        "key": "alt+s",
        "command": "extension.swapSelections",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+8",
        "command": "-extension.swapSelections",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+g",
        "command": "jsdoc-generator.generateJSDoc"
    },
    {
        "key": "alt+j",
        "command": "-jsdoc-generator.generateJSDoc"
    },
    {
        "key": "shift+alt+w",
        "command": "editor.action.toggleWordWrap"
    },
    {
        "key": "alt+z",
        "command": "-editor.action.toggleWordWrap"
    },
    {
        "key": "ctrl+shift+/",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    }
]