(defwindow bar
  :monitor 0
  :windowtype "dock"
  :wm-ignore false
  :stacking "fg"

  :geometry (geometry
    :anchor "top left"
    :x "0.5%"
    :y "3px"
    :width "99%"
    :height "30px"
  )

  :reserve (struts
    :side "top"
    :distance "31px"
  )

  (box :class "bar"
    :orientation "h"
    (bar-left)
    (bar-center)
    (bar-right)
  )
)

(defwidget bar-left []
  (box :class "bar-left"
    :halign "start"
    :space-evenly false
    (workspaces)
  )
)

(defwidget bar-center []
  (box :class "bar-center"
    :halign "center"
    :space-evenly false
    (window-name)
  )
)

(defwidget bar-right []
  (box :class "bar-right"
    :halign "end"
    :space-evenly false
    (audio-volume)
    (bluetooth-status)
    (net)
    (battery)
    (time :fmt "%H:%M")
  )
)


(defvar show-audio-volume false)

(defwidget audio-volume []
  (box
    :class "audio-volume"
    :tooltip "Audio"
    (eventbox
      :onhover "${EWW_CMD} update show-audio-volume=true"
      :onhoverlost "${EWW_CMD} update show-audio-volume=false"
      (box
        :space-evenly false
        :spacing 3
        (button
          :onclick "pactl set-sink-mute @DEFAULT_SINK@ toggle"
          (label
            :text ""
          )
        )
        (revealer
          :transition "slideleft"
          :reveal show-audio-volume
          :duration 300
          (scale
            :value 50
            :min 0
            :max 101
            :onchange "pactl set-sink-volume @DEFAULT_SINK@ {}%"
            :orientation "h"
          )
        )
      )
    )
  )
)


(defwidget time [fmt]
  (box
    :class "time"
    :tooltip "${formattime(EWW_TIME, "%m/%d/%Y[%a]%H:%M:%S")}"
    (button
      :onclick "${EWW_CMD} open --toggle calendar"
      (label
        :text "${formattime(EWW_TIME, fmt)}"
      )
    )
  )
)


(defwindow calendar
  :monitor 0
  :windowtype "dialog"
  :wm-ignore true

  :geometry (geometry
    :anchor "top right"
    :x "-0.5%"
    :y "33px"
    :width "10%"
    :height "10%"
  )

  (calendar :class "calendar")
)


(defwidget battery []

  (box
    :class "battery ${
      EWW_BATTERY.BAT0.status == "Charging" ? (
        "battery-charging"
      ) : (
        "battery-discharging"
      )
    } ${
      EWW_BATTERY.BAT0.capacity < 10 ? (
        "battery-critical"
      ) : EWW_BATTERY.BAT0.capacity < 30 ? (
        "battery-low"
      ) : EWW_BATTERY.BAT0.capacity < 60 ? (
        "battery-middle"
      ) : (
        "battery-high"
      )
    }"

    :tooltip "battery on ${EWW_BATTERY.BAT0.capacity}%"

    (label
      :text "${
        EWW_BATTERY.BAT0.capacity >= 100 ? (
          "󰁹"
        ) : EWW_BATTERY.BAT0.capacity >= 90 ? (
          "󰂂"
        ) : EWW_BATTERY.BAT0.capacity >= 80 ? (
          "󰂁"
        ) : EWW_BATTERY.BAT0.capacity >= 70 ? (
          "󰂀"
        ) : EWW_BATTERY.BAT0.capacity >= 60 ? (
          "󰁿"
        ) : EWW_BATTERY.BAT0.capacity >= 50 ? (
          "󰁾"
        ) : EWW_BATTERY.BAT0.capacity >= 40 ? (
          "󰁽"
        ) : EWW_BATTERY.BAT0.capacity >= 30 ? (
          "󰁼"
        ) : EWW_BATTERY.BAT0.capacity >= 20 ? (
          "󰁻"
        ) : EWW_BATTERY.BAT0.capacity >= 10 ? (
          "󰁺"
        ) : (
          "󰂎"
        )
      }${
        EWW_BATTERY.BAT0.status == "Charging" ? (
          "󱐋"
        ) : (
          ""
        )
      }"
    )

  )

)


(defpoll net
  :interval "1h"
  :initial `N/A`
  `nmcli -c no -g SIGNAL,ACTIVE device wifi \
    | awk -F':' '{if($2=="yes")print$1}'`
)

(defwidget net []
  (box
    :class "net"
    :tooltip "net: ${net}"
    (button
      :onclick "st nmtui &"
      (label
        :text "${
          net == "N/A" ? (
            "󰤮"
          ) : (
            "󰤨"
          )
        }"
      )
    )
  )
)


(defpoll num_workspaces
  :interval "1h"
  :initial "0"
  `seq -s ", " $(xdotool get_num_desktops)`
)

(defpoll current_workspace
  :interval "2s"
  :initial "0"
  `xdotool get_desktop`
)

(defwidget workspaces []
  (box
    :class "workspaces"
    (for i in "[${num_workspaces}]"
      (label
        :class "workspace ${
          i == current_workspace + 1 ? (
            "current-workspace"
          ) : (
            ""
          )
        }"
        :text "${i}"
      )
    )
  )
)


(defpoll window-name
  :interval "2s"
  :initial ""
  `xdotool getwindowname $(xdotool getwindowfocus)`
)

(defwidget window-name []
  (box :class "window-name"
    (label
      :truncate true
      :show-truncated true
      :text "${window-name}"
    )
  )
)


(defpoll bluetooth-status
  :interval "1s"
  :initial ""
  `[ -n "$(bluetoothctl show | grep "Powered: yes")" ] && echo on || echo off`
)

(defwidget bluetooth-status []
  (box
    :class "bluetooth-status"

    (button
      :onclick "bluetoothctl power ${
        bluetooth-status == "on" ? (
          "off"
        ) : (
          "on"
        )
      }"

      (label
        :text "${
          bluetooth-status == "on" ? (
            "󰂯"
          ) : (
            "󰂲"
          )
        }"
      )
    )
  )
)
